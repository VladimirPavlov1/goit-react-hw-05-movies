{"version":3,"file":"static/js/544.3f48363d.chunk.js","mappings":"mTAEO,SAAgBA,IAAvB,4CAAQ,OAAR,oBAAQ,oGACkBC,EAAAA,EAAAA,IAClB,yFACA,CACIC,OAAQ,CACJC,SAAU,QALlB,cACEC,EADF,yBASGA,EAAQC,KAAKD,SAThB,kEAYD,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACmBN,EAAAA,EAAAA,IAAA,6CACoBM,EADpB,6CAElB,CACIL,OAAQ,CACJC,SAAU,QALnB,cACGC,EADH,yBASIA,EAAQC,MATZ,kEAYA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACmBR,EAAAA,EAAAA,IAClB,qFACA,CACIC,OAAQ,CACJQ,MAAOD,KALhB,cACGL,EADH,yBASIA,EAAQC,KAAKD,SATjB,kEAYA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAuBJ,GAAvB,uFACmBN,EAAAA,EAAAA,IAAA,6CACoBM,EADpB,sDADnB,cACGH,EADH,yBAIIA,EAAQC,KAAKO,MAJjB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BN,GAA1B,uFACmBN,EAAAA,EAAAA,IAAA,6CACoBM,EADpB,sDADnB,cACGH,EADH,yBAIIA,EAAQC,KAAKD,SAJjB,kE,wDCjBP,IAxBkB,SAAC,GAAe,IAAbU,EAAY,EAAZA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,0BACI,wBACKF,EAAMG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACrB,OACI,yBACI,SAAC,KAAD,CACIC,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMR,GAFnB,SAKKI,GAASC,KANTF,EAUhB,OAIhB,C,0HCUD,UA/Ba,WACT,OAA0BM,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACNH,GAAa,GACb,IAAMI,EAAW,mCAAG,8GAEO/B,EAAAA,EAAAA,MAFP,OAENK,EAFM,OAGZoB,EAASpB,GAHG,gDAKZwB,EAAS,KAAMG,SALH,yBAOZL,GAAa,GAPD,4EAAH,qDAUjBI,GACH,GAAE,KAGC,4BACI,2CAECL,IAAa,SAAC,IAAD,IACbE,IAAS,qIACTd,IAAS,SAAC,IAAD,CAAWA,MAAOA,MAGvC,C","sources":["apiServises.js","components/MovieList/MovieList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport  async function getTrend(){\n    const results = await axios.get(\n        'https://api.themoviedb.org/3/trending/all/day?api_key=27cddf1230eab22bdf20f54c99a70037',\n        {\n            params: {\n                language: 'ua',\n            },\n        }\n    );\n    return results.data.results\n};\n\nexport async function getMovieDetails(movieId){\n    const results = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=27cddf1230eab22bdf20f54c99a70037`,\n        {\n            params: {\n                language: 'ua',\n            },\n        }\n    );\n    return results.data\n};\n\nexport async function getMovieByName(movieName){\n    const results = await axios.get(\n        'https://api.themoviedb.org/3/search/movie?api_key=27cddf1230eab22bdf20f54c99a70037',\n        {\n            params: {\n                query: movieName,\n            },\n        }\n    );\n    return results.data.results\n};\n\nexport async function getCast(movieId){\n    const results = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=27cddf1230eab22bdf20f54c99a70037`\n    );\n    return results.data.cast\n};\n\nexport async function getReviews(movieId){\n    const results = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=27cddf1230eab22bdf20f54c99a70037`\n    );\n    return results.data.results\n};\n","import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ items }) => {\n    const location = useLocation();\n\n    return (\n        <div>\n            <ul>\n                {items.map(({ id, title, name }) => {\n                    return (\n                        <li key={id}>\n                            <NavLink\n                                to={`/movies/${id}`}\n                                state={{ from: location }}\n                               \n                            >\n                                {title || name}\n                            </NavLink>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string,\n            name:PropTypes.string\n        })\n    ),\n};\n","import { getTrend } from 'apiServises';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\n\nconst Home = () => {\n    const [items, setItems] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        setIsLoading(true);\n        const trendMovies = async () => {\n            try {\n                const data = await getTrend();\n                setItems(data);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        trendMovies();\n    }, []);\n\n    return (\n        <div>\n            <h2>Trending today</h2>\n\n            {isLoading && <Loader />}\n            {error && <p>ойоййой, що робиться</p>}\n            {items && <MovieList items={items} />}\n        </div>\n    );\n};\n\nexport default Home;\n"],"names":["getTrend","axios","params","language","results","data","getMovieDetails","movieId","getMovieByName","movieName","query","getCast","cast","getReviews","items","location","useLocation","map","id","title","name","to","state","from","useState","setItems","isLoading","setIsLoading","error","setError","useEffect","trendMovies","message"],"sourceRoot":""}