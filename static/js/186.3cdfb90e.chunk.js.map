{"version":3,"file":"static/js/186.3cdfb90e.chunk.js","mappings":"mTAEO,SAAgBA,IAAvB,4CAAQ,OAAR,oBAAQ,oGACkBC,EAAAA,EAAAA,IAClB,yFACA,CACIC,OAAQ,CACJC,SAAU,QALlB,cACEC,EADF,yBASGA,EAAQC,KAAKD,SAThB,kEAYD,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACmBN,EAAAA,EAAAA,IAAA,6CACoBM,EADpB,6CAElB,CACIL,OAAQ,CACJC,SAAU,QALnB,cACGC,EADH,yBASIA,EAAQC,MATZ,kEAYA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACmBR,EAAAA,EAAAA,IAClB,qFACA,CACIC,OAAQ,CACJQ,MAAOD,KALhB,cACGL,EADH,yBASIA,EAAQC,KAAKD,SATjB,kEAYA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAuBJ,GAAvB,uFACmBN,EAAAA,EAAAA,IAAA,6CACoBM,EADpB,sDADnB,cACGH,EADH,yBAIIA,EAAQC,KAAKO,MAJjB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BN,GAA1B,uFACmBN,EAAAA,EAAAA,IAAA,6CACoBM,EADpB,sDADnB,cACGH,EADH,yBAIIA,EAAQC,KAAKD,SAJjB,kE,yHCYP,UAlDgB,WAGZ,OAA0BU,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,QAoBR,OAjBAe,EAAAA,EAAAA,YAAU,WACNJ,GAAa,GAEb,IAAMK,EAAY,mCAAG,8GAEMV,EAAAA,EAAAA,IAAWN,GAFjB,OAEPF,EAFO,OAGbW,EAASX,GAHI,gDAKbe,EAAS,KAAMI,SALF,yBAQbN,GAAa,GARA,4EAAH,qDAWlBK,GACH,GAAE,CAAChB,KAGA,2BACKU,IAAa,SAAC,IAAD,IACbE,IAAS,qIACTJ,IACG,wBACKA,EAAMU,OAAS,EACZV,EAAMW,KAAI,SAAAC,GACN,OACI,2BACI,oCAAYA,EAAKC,WACjB,uBAAID,EAAKE,YAFJF,EAAKG,GAKrB,KAED,4CAMvB,C","sources":["apiServises.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport  async function getTrend(){\n    const results = await axios.get(\n        'https://api.themoviedb.org/3/trending/all/day?api_key=27cddf1230eab22bdf20f54c99a70037',\n        {\n            params: {\n                language: 'ua',\n            },\n        }\n    );\n    return results.data.results\n};\n\nexport async function getMovieDetails(movieId){\n    const results = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=27cddf1230eab22bdf20f54c99a70037`,\n        {\n            params: {\n                language: 'ua',\n            },\n        }\n    );\n    return results.data\n};\n\nexport async function getMovieByName(movieName){\n    const results = await axios.get(\n        'https://api.themoviedb.org/3/search/movie?api_key=27cddf1230eab22bdf20f54c99a70037',\n        {\n            params: {\n                query: movieName,\n            },\n        }\n    );\n    return results.data.results\n};\n\nexport async function getCast(movieId){\n    const results = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=27cddf1230eab22bdf20f54c99a70037`\n    );\n    return results.data.cast\n};\n\nexport async function getReviews(movieId){\n    const results = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=27cddf1230eab22bdf20f54c99a70037`\n    );\n    return results.data.results\n};\n","import { getReviews } from 'apiServises';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\n\n\nconst Reviews = () => {\n   \n\n    const [items, setItems] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const { movieId } = useParams();\n\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const movieReviews = async () => {\n            try {\n                const data = await getReviews(movieId);\n                setItems(data);\n            } catch (error) {\n                setError(error.message);\n            }\n            finally{\n                setIsLoading(false)\n            }\n        };\n        movieReviews();\n    }, [movieId]);\n\n    return (\n        <div>\n            {isLoading && <Loader />}\n            {error && <p>ойоййой, що робиться</p>}\n            {items && (\n                <ul>\n                    {items.length > 0 ? (\n                        items.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <h3>Author:{item.author}</h3>\n                                    <p>{item.content}</p>\n                                </li>\n                            );\n                        })\n                    ) : (\n                        <h3>Not reviews</h3>\n                    )}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default Reviews;\n"],"names":["getTrend","axios","params","language","results","data","getMovieDetails","movieId","getMovieByName","movieName","query","getCast","cast","getReviews","useState","items","setItems","isLoading","setIsLoading","error","setError","useParams","useEffect","movieReviews","message","length","map","item","author","content","id"],"sourceRoot":""}